import{_ as n,o as a,c as s,d as e}from"./app-75535683.js";const t={},c=e(`<h3 id="js中的foreach可以改变原数组吗" tabindex="-1"><a class="header-anchor" href="#js中的foreach可以改变原数组吗" aria-hidden="true">#</a> js中的forEach可以改变原数组吗？</h3><p>昨天晚上遇到了神奇的问题forEach循环改不了数组中的变量了 代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    <span class="token keyword">let</span> a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>
    <span class="token keyword">debugger</span>
    a<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        item<span class="token operator">=</span><span class="token number">6</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出[1,2,3,4,5]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>本以为应该输出<code>[6,6,6,6,6]</code>,结果输出了<code>[1,2,3,4,5]</code>,那到底是为什么呢，为啥我改了item， 数组没变呢？百度了一下得出答案：</p><ul><li>如果数组中的值是基本类型, 改变不了;</li><li>如果是引用类型分两种情况：<br> 1、没有修改形参元素的地址值, 只是修改形参元素内部的某些属性，会改变原数组； 2、直接修改整个元素对象时，无法改变原数组；</li></ul><p>后来自己想了一下js函数的执行过程，其实感觉和foreach关系不大，和js中函数形参和实参赋值有关系，函数执行时会创建Activation Object， 等于是重新创建了变量来保存传进来的形参，所以如果是简单类型修改的是Activation Object中的变量，而不是原来的变量， 而复杂类型保存的是内存地址，除非替换整个对象，否则是修改的原有变量。</p>`,6),o=[c];function p(i,l){return a(),s("div",null,o)}const r=n(t,[["render",p],["__file","aboutForEach.html.vue"]]);export{r as default};
